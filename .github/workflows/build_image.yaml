# name: build and publish container image

on:
  push:
    branches:
    - develop
    tags:
    - v[0-9].*
  workflow_dispatch:

jobs:
  python-test-and-build-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Linting
      if: success()
      run: |
        flake8 --count --show-source --statistics

    - name: set image metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=raw,value=develop-{{date 'YYYYMMDD-HHmmss' tz='Asia/Singapore'}}-{{sha}},enable=${{ github.ref == format('refs/heads/{0}', 'develop') }}
        flavor: |
          latest=false

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to github registry
      if: success()
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        platforms: "linux/amd64,linux/arm64"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Delete old images
      uses: actions/delete-package-versions@v4
      with:
        owner: ${{ github.repository_owner }}
        package-name: ${{ github.event.repository.name }}
        package-type: container
        min-versions-to-keep: 10
        ignore-versions: latest
        token: ${{ secrets.GITHUB_TOKEN }}
